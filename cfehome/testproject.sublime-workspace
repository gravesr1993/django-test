{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"View",
				"View"
			],
			[
				"user",
				"user"
			],
			[
				"pro",
				"profile"
			],
			[
				"from",
				"from_email"
			],
			[
				"activatio",
				"activation_key"
			],
			[
				"com",
				"com"
			],
			[
				"acti",
				"activation_key"
			],
			[
				"Regi",
				"RegisterView"
			],
			[
				"get",
				"get_user_model"
			],
			[
				"pass",
				"password1"
			],
			[
				"User",
				"UserCreationForm"
			],
			[
				"Pass",
				"PasswordInput"
			],
			[
				"is_fo",
				"is_following_uid"
			],
			[
				"Pro",
				"ProfileManager"
			],
			[
				"pr",
				"profile_"
			],
			[
				"post",
				"post_save_user_receiver"
			],
			[
				"Res",
				"RestaurantLocationQuerySet"
			],
			[
				"prof",
				"ProfileDetailView"
			],
			[
				"Rest",
				"RestaurantLocation"
			],
			[
				"Item",
				"ItemCreateView"
			],
			[
				"login",
				"login_required"
			],
			[
				"val",
				"validate_category"
			],
			[
				"cleaned",
				"cleaned_data"
			],
			[
				"res",
				"RestaurantLocationCreateForm"
			],
			[
				"location",
				"location"
			],
			[
				"rand",
				"random_string_generator"
			],
			[
				"re",
				"RestaurantLocation"
			],
			[
				"auto",
				"auto_now_add"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "from django.shortcuts import render\nfrom django.views.generic import TemplateView\nfrom django.contrib.auth import get_user_model\nfrom plaid import Client\nfrom plaid.errors import APIError, ItemError\nimport os\nimport datetime\nimport plaid\nfrom flask import Flask\nfrom flask import render_template\nfrom flask import request\nfrom flask import jsonify\n\napp = Flask(__name__)\n\n# Fill in your Plaid API keys - https://dashboard.plaid.com/account/keys\nPLAID_CLIENT_ID = '5b9fccf1448de50011a24cd4'\nPLAID_SECRET = '9aa1e5a287571946c2c29bc7095c74'\nPLAID_PUBLIC_KEY = '113612795da4a87e4850681ffb3866'\n# Use 'sandbox' to test with Plaid's Sandbox environment (username: user_good,\n# password: pass_good)\n# Use `development` to test with live users and credentials and `production`\n# to go live\nPLAID_ENV='sandbox'\n\n# Create your views here.\nclass PlaidView(TemplateView):\n\ttemplate_name='./plaidtest/plaid_test.html'\n\t#test code\n\t# client = Client(client_id='5b9fccf1448de50011a24cd4',secret='9aa1e5a287571946c2c29bc7095c74',public_key='113612795da4a87e4850681ffb3866',environment='sandbox')\n\t# try:\n\t# \tclient.Auth.get(access_token)\n\t# except ItemError as e:\n\t# \tprint('error')\n\n\n\nclient = plaid.Client(client_id = PLAID_CLIENT_ID, secret=PLAID_SECRET,\n                  public_key=PLAID_PUBLIC_KEY, environment=PLAID_ENV)\n\n@app.route(\"/\")\ndef index():\n   return render_template('index.ejs', plaid_public_key=PLAID_PUBLIC_KEY, plaid_environment=PLAID_ENV)\n\n\naccess_token = None\npublic_token = None\n\n@app.route(\"/get_access_token\", methods=['POST'])\ndef get_access_token():\n  global access_token\n  public_token = request.form['public_token']\n  exchange_response = client.Item.public_token.exchange(public_token)\n  print ('access token: ' + exchange_response['access_token'])\n\n  access_token = exchange_response['access_token']\n\n  return jsonify(exchange_response)\n\n@app.route(\"/set_access_token\", methods=['POST'])\ndef set_access_token():\n  global access_token\n  access_token = request.form['access_token']\n  print ('access token: ' + access_token)\n  return jsonify({'error': False})\n\n@app.route(\"/accounts\", methods=['GET'])\ndef accounts():\n  global access_token\n  accounts = client.Auth.get(access_token)\n  return jsonify(accounts)\n\n@app.route(\"/item\", methods=['GET', 'POST'])\ndef item():\n  global access_token\n  item_response = client.Item.get(access_token)\n  institution_response = client.Institutions.get_by_id(item_response['item']['institution_id'])\n  return jsonify({'item': item_response['item'], 'institution': institution_response['institution']})\n\n@app.route(\"/transactions\", methods=['GET', 'POST'])\ndef transactions():\n  global access_token\n  # Pull transactions for the last 30 days\n  start_date = \"{:%Y-%m-%d}\".format(datetime.datetime.now() + datetime.timedelta(-30))\n  end_date = \"{:%Y-%m-%d}\".format(datetime.datetime.now())\n\n  response = client.Transactions.get(access_token, start_date, end_date)\n  return jsonify(response)\n\n@app.route(\"/create_public_token\", methods=['GET'])\ndef create_public_token():\n  global access_token\n  # Create a one-time use public_token for the Item. This public_token can be used to\n  # initialize Link in update mode for the user.\n  response = client.Item.public_token.create(access_token)\n  return jsonify(response)\n\nif __name__ == \"__main__\":\n    app.run()",
			"file": "src/plaidtest/views.py",
			"file_size": 3398,
			"file_write_time": 131817068465303328,
			"settings":
			{
				"buffer_size": 3298,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/plaidtest/plaid/static/static.css",
			"settings":
			{
				"buffer_size": 2164,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/plaidtest/urls.py",
			"settings":
			{
				"buffer_size": 124,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/profiles/urls.py",
			"settings":
			{
				"buffer_size": 171,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/testproject/urls.py",
			"settings":
			{
				"buffer_size": 1926,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/testproject/settings/base.py",
			"settings":
			{
				"buffer_size": 3548,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/templates/snippets/css.html",
			"settings":
			{
				"buffer_size": 414,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/dev/cfehome",
		"/C/dev/cfehome/src",
		"/C/dev/cfehome/src/menus",
		"/C/dev/cfehome/src/menus/templates",
		"/C/dev/cfehome/src/plaidtest",
		"/C/dev/cfehome/src/plaidtest/plaid",
		"/C/dev/cfehome/src/plaidtest/templates",
		"/C/dev/cfehome/src/plaidtest/templates/plaidtest",
		"/C/dev/cfehome/src/templates",
		"/C/dev/cfehome/src/templates/snippets",
		"/C/dev/cfehome/src/testproject",
		"/C/dev/cfehome/src/testproject/__pycache__",
		"/C/dev/cfehome/src/testproject/settings",
		"/C/dev/cfehome/src/testproject/settings/__pycache__"
	],
	"file_history":
	[
		"/C/dev/cfehome/src/profiles/templates/profiles/user.html",
		"/C/dev/cfehome/src/menus/templates/menus/home-feed.html",
		"/C/dev/cfehome/src/templates/base.html",
		"/C/dev/cfehome/src/profiles/models.py",
		"/C/dev/cfehome/src/profiles/views.py",
		"/C/dev/cfehome/src/templates/snippets/search_bar.html",
		"/C/dev/cfehome/src/menus/urls.py",
		"/C/dev/cfehome/src/testproject/urls.py",
		"/C/dev/cfehome/src/testproject/settings/base.py",
		"/C/dev/cfehome/src/restaurants/urls.py",
		"/C/dev/cfehome/src/restaurants/templates/restaurants/restaurantlocation_list.html",
		"/C/dev/cfehome/src/plaid/template/plaid_test.html",
		"/C/dev/cfehome/src/plaid/template/test_working.html",
		"/C/dev/cfehome/src/plaid/views.py",
		"/C/dev/cfehome/src/plaid/urls.py",
		"/C/dev/cfehome/src/plaid/models.py",
		"/C/dev/cfehome/src/templates/snippets/js.html",
		"/C/dev/cfehome/src/restaurants/templates/restaurants/restaurantlocation_detail.html",
		"/C/dev/cfehome/src/profiles/utils.py",
		"/C/dev/cfehome/src/profiles/forms.py",
		"/C/dev/cfehome/src/menus/templates/menus/item_list.html",
		"/C/dev/cfehome/src/templates/registration/login.html",
		"/C/dev/cfehome/src/templates/registration/register.html",
		"/C/dev/cfehome/src/menus/views.py",
		"/C/dev/cfehome/src/profiles/templates/profiles/register.html",
		"/C/dev/cfehome/src/profiles/templates/profiles/snippet/follow_form.html",
		"/C/dev/cfehome/src/restaurants/models.py",
		"/C/dev/cfehome/src/profiles/admin.py",
		"/C/dev/cfehome/src/profiles/shell_commands.py",
		"/C/dev/cfehome/src/menus/models.py",
		"/C/dev/cfehome/src/profiles/urls.py",
		"/C/dev/cfehome/src/menus/templates/menus/detail-update.html",
		"/C/dev/cfehome/src/menus/forms.py",
		"/C/dev/cfehome/src/menus/templates/menus/item_detail.html",
		"/C/dev/cfehome/src/templates/form.html",
		"/C/dev/cfehome/src/restaurants/views.py",
		"/C/dev/cfehome/src/restaurants/forms.py",
		"/C/dev/cfehome/src/templates/snippets/form-snippet.html",
		"/C/dev/cfehome/src/templates/snippets/nav.html",
		"/C/dev/cfehome/src/restaurants/templates/restaurants/detail-update.html",
		"/C/dev/cfehome/Lib/site-packages/django/http/response.py",
		"/C/dev/cfehome/src/restaurants/templates/restaurants/form.html",
		"/C/dev/cfehome/src/menus/admin.py",
		"/C/dev/cfehome/src/templates/home.html",
		"/C/dev/cfehome/src/restaurants/utils.py",
		"/C/dev/cfehome/src/restaurants/validators.py",
		"/C/dev/cfehome/src/templates/snippets/css.html",
		"/C/dev/cfehome/src/templates/snippets/sidebar.html",
		"/C/dev/cfehome/src/restaurants/admin.py",
		"/C/dev/cfehome/src/templates/about.html",
		"/C/dev/cfehome/src/templates/contact.html",
		"/C/dev/cfehome/src/testproject/settings/__init__.py",
		"/C/dev/cfehome/src/testproject/oldsettings.py",
		"/C/dev/cfehome/testproject.sublime-project",
		"/C/dev/cfehome/src/testproject/settings/production.py",
		"/C/dev/cfehome/src/testproject/settings/local.py",
		"/C/dev/cfehome/src/testproject/settings/settings.py"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 104.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"password",
			"plaid",
			"RestaurantCreateView",
			"HomeView",
			"ProfileFollowToggle",
			"AUTH_PROFILE",
			"AUTH",
			"default",
			"detail",
			">\n"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 6,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/plaidtest/views.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3298,
						"regions":
						{
						},
						"selection":
						[
							[
								3298,
								3298
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 908.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/plaidtest/plaid/static/static.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2164,
						"regions":
						{
						},
						"selection":
						[
							[
								523,
								523
							]
						],
						"settings":
						{
							"syntax": "Packages/CSS/CSS.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/plaidtest/urls.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 124,
						"regions":
						{
						},
						"selection":
						[
							[
								124,
								124
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/profiles/urls.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 171,
						"regions":
						{
						},
						"selection":
						[
							[
								171,
								171
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/testproject/urls.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1926,
						"regions":
						{
						},
						"selection":
						[
							[
								1072,
								1072
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/testproject/settings/base.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3548,
						"regions":
						{
						},
						"selection":
						[
							[
								1134,
								1134
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 324.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src/templates/snippets/css.html",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 414,
						"regions":
						{
						},
						"selection":
						[
							[
								414,
								414
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 39.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "testproject.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 308.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
